from itertools import permutations
from itertools import combinations
from itertools import combinations_with_replacement
from itertools import product

print("#######################")
print("# Simple Permutations #")
print("#######################")
print()
print("All the permutations of the given list is:")
print()
print("n = [1, 2, 3]")
print("#P(N) = ",list(permutations([1, 2, 3], 3)))
print()
print("n = [a, b, c]")
print("#P(N) = ", list(permutations(['a', 'b', 'c'], 3)))
print()
print()
print("In Simple Permutation n == k and there's no replacement, order matters")
print()
print()
print()

print("#######################")
print("# Permutations w/repl #")
print("#######################")
print()
print("All the permutations of the given list is:")
print()
print("n = [1, 2, 3]")
print("#P(N) = ", end =" ")
for roll in product([1, 2, 3], repeat = 3):
    print(roll, end =", ")
print()
print()
print("n = [a, b, c]")
print("#P(N) = ", end =" ")
for roll in product(['a', 'b', 'c'], repeat = 3):
    print(roll, end =", ")
print()
print()
print()
print("In Permutation with replacement n == k and there's replacement, order matters")
print()
print()
print()

print("#######################")
print("# Simple Arrangemests #")
print("#######################")
print()
print("All the permutations of the given list is:")
print()
print("n = [1, 2, 3]")
print("#P(N) = ",list(permutations([1, 2, 3], 2)))
print()
print("n = [a, b, c]")
print("#P(N) = ", list(permutations(['a', 'b', 'c'], 2)))
print()
print()
print("In Permutation n != k and there's no replacement, order matters")
print()
print()
print()


print("#######################")
print("# Arrangemests w/repl #")
print("#######################")
print()
print("All the permutations of the given list is:")
print()
print("n = [1, 2, 3]")
print()
print("#P(N) = ", end =" ")
for roll in product([1, 2, 3, 4], repeat = 2):
    print(roll, end =", ")
print()
print()
print("n = [a, b, c]")
print("#P(N) = ", end =" ")
for roll in product(['a', 'b', 'c'], repeat = 2):
    print(roll, end =", ")
print()
print()
print("In Permutation n != k and there's replacement, order matters")
print()
print()
print()

print("#######################")
print("# Simple Combinations #")
print("#######################")
print()
print("All the combinations of the given list is:")
print()
print("n = [1, 2, 3]")
print("#P(N) = ",list(combinations([1, 2, 3], 2)))
print()
print("n = [a, b, c]")
print("#P(N) = ", list(combinations(['a', 'b', 'c'], 2)))
print()
print()
print("In combinations n != k and there's no replacement, order DOESN'T matter")
print()
print()
print()


print("########################")
print("# Combitantions w/repl #")
print("########################")
print()
print("All the combinations with replacement of the given list is:")
print()
print("n = [1, 2, 3]")
print("#P(N) = ",list(combinations_with_replacement([1, 2, 3], 2)))
print()
print("n = [a, b, c]")
print("#P(N) = ", list(combinations_with_replacement(['a', 'b', 'c'], 2)))
print()
print()
print("In combinations with replacement n != k and there's replacement, order DOESN'T matter")
print()
